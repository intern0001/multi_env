name: "Infrastructure dev"
on:
  push:
    paths:
      - 'project/environments/dev/**'

jobs:
  terragrunt:
    name: Terragrunt
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    env:
      WORKING_DIRECTORY: project/environments/dev/us-east-1/

    steps:
      - name: Checkout
        uses: actions/checkout@v2
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7
          terraform_wrapper: false

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.51.1

      - name: Terragrunt Staging Plan
        run: terragrunt run-all show -no-color -json staging.plan >> staging_plan.json

      - name: Filter Zero Change Resources
        run: |
         jq -c '.resource_changes[] | select(.change.actions != ["no-op"])' staging_plan.json > filtered_staging_plan.json


      - name: Terragrunt Apply
        run: |
         terragrunt run-all apply filtered_staging_plan.json | \
         grep -v "Plan: 0 to add, 0 to change, 0 to destroy"



     
    #  - name: Check for Plan Failure
    #    run: echo ${{ steps.plan.outputs.exitcode }}
              
    #  - name: Terragrunt Init
    #    id: init
    #    run: terragrunt run-all init
    #  - name: Terragrunt Apply
    #    id: apply
    #    run: terragrunt run-all apply --terragrunt-non-interactive  
